name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env: 
  CARGO_TERM_COLOR: always

jobs:
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '18'
          
      - name: Cache npm global modules (yarn)
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-  
          
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install yarn
        run: npm install -g yarn  
          
      - name: Install dependencies
        run: yarn install

      - name: Build frontend
        run: yarn build
        env:
          CI: false

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
        
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ci
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - run: cargo build --verbose
      - run: cargo test --verbose
